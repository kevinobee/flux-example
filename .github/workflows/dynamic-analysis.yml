name: Dynamic Analysis

on:

  workflow_dispatch:

jobs:

  kubernetes:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      GITHUB_USER: kevinobee  # ${{ secrets.GITHUB_USER }}
      GITHUB_TOKEN: ${{ secrets.FLUX }}

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Setup CLI tools
        run: |
          brew install kind
          brew install fluxcd/tap/flux
        env:
          HOMEBREW_NO_INSTALL_CLEANUP: true

      - name: Setup Kubernetes
        run: |
          kind create cluster
          kubectl wait node --all --for condition=ready
          kubectl cluster-info

      - name: Run pre-installation checks
        run: |
          flux check --pre

      - name: Bootstrap Flux
        run: |
          flux bootstrap github \
            --owner=$GITHUB_USER \
            --repository=${REPOSITORY} \
            --branch=${GITHUB_REF#refs/heads/} \
            --path=./cluster \
            --personal
        env:
          REPOSITORY: ${{ github.event.repository.name }}

      - name: Force Flux sync with cluster
        run: |
          flux reconcile kustomization flux-system --with-source

      # - name: Wait for Flux sync
      #   run: |
      #     kubectl -n flux-system wait kustomization/flux-system --for=condition=ready --timeout=2m
      #     kubectl get gitrepo,ks -A

#     - name: Setup cluster reconciliation
#       run: |
#         flux create source git flux-system \
#         --url=${{ github.event.repository.html_url }} \
#         --branch=${GITHUB_REF#refs/heads/}
#         flux create kustomization flux-system \
#         --source=flux-system \
#         --path=./cluster

#     - name: Verify cluster reconciliation
#       run: |
#         kubectl -n flux-system wait kustomization/flux-system --for=condition=ready --timeout=1m
#         # kubectl -n flux-system wait kustomization/infrastructure --for=condition=ready --timeout=1m
#         # kubectl -n flux-system wait kustomization/apps --for=condition=ready --timeout=1m

      # - name: Verify helm reconciliation
      #   run: |
      #     kubectl -n nginx wait helmrelease/nginx --for=condition=ready --timeout=1m

      # - name: Docker network checks
      #   run: |
      #     docker network inspect -f '{{.IPAM.Config}}' kind

      - name: Namespace checks
        run: |
          ns=( \
            "flux-system"
          )

          for i in "${ns[@]}"
          do
            kubectl get ns "${i}"
          done

      - name: Debug failure
        if: failure()
        run: |
          kubectl get ns
          kubectl get gitrepo,ks -A
          kubectl -n flux-system get all
          kubectl -n flux-system logs deploy/source-controller
          kubectl -n flux-system logs deploy/kustomize-controller
          kubectl -n flux-system logs deploy/helm-controller
