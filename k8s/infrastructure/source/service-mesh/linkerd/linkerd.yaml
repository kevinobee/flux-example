---
###
### Linkerd Namespace
###
kind: Namespace
apiVersion: v1
metadata:
  name: linkerd
  annotations:
    linkerd.io/inject: disabled
  labels:
    linkerd.io/is-control-plane: "true"
    config.linkerd.io/admission-webhooks: disabled
    linkerd.io/control-plane-ns: linkerd
---
###
### Identity Controller Service RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["authentication.k8s.io"]
  resources: ["tokenreviews"]
  verbs: ["create"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-identity
subjects:
- kind: ServiceAccount
  name: linkerd-identity
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
---
###
### Destination Controller Service
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["apps"]
  resources: ["replicasets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods", "endpoints", "services", "nodes", "namespaces"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["discovery.k8s.io"]
  resources: ["endpointslices"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-destination
subjects:
- kind: ServiceAccount
  name: linkerd-destination
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-destination
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-sp-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUVENDQWpXZ0F3SUJBZ0lSQUpMeVlPNzNSOGNWT08yOXpaSUJCMDB3RFFZSktvWklodmNOQVFFTEJRQXcKS3pFcE1DY0dBMVVFQXhNZ2JHbHVhMlZ5WkMxemNDMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13SGhjTgpNakl3T0RNeE1Ea3lNakExV2hjTk1qTXdPRE14TURreU1qQTFXakFyTVNrd0p3WURWUVFERXlCc2FXNXJaWEprCkxYTndMWFpoYkdsa1lYUnZjaTVzYVc1clpYSmtMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQU5KSGtBZlU4WFN0ektlSGNsQ0lNVDVNd255ZWY1K2lWdjY0WUJUQ2JsQlRleXdzMDdwQQpReDNXYjBVbGZiSUNndm52MWVvR3Qyc3JrbTMvc2duM0xzVUhIYUlkMHFhWGZaTTJXRTVZRDBXOU9YV2pHeGVVCmN5ZWdEUGdHdkQxZ3JpbVdrNURwYld4UnBMbGVEeFIvT2Jtd1RZOTRNNWc2NE5XNGg1YWdTTjVtUGRIbGhrTkgKQzVmMkU1ZUxVN2JPUjZGVnJHNnpkMGxYTDEySllGVjJFOWUzZVd4S2ZPVGpnWGo0WG41NnZ5Y2RQZmFnWm9HOApjOWc2aVJ4T2xTS0ROY01vV3BiMXpsQ3VJL1hVdko2UXYwZjdSRlNxUTdSUjcwWDJOa2tDRDZXeFdyeUc3UjRSCnFiaEcyTXozaTFmTzZXVjE4ZEVVbWw5YW1vUGVaREw1MyswQ0F3RUFBYU5zTUdvd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQ3NHQTFVZEVRUWtNQ0tDSUd4cGJtdGxjbVF0YzNBdGRtRnNhV1JoZEc5eUxteHBibXRsY21RdWMzWmpNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFEQXVVYTRLL2M4MXF1SnllNmR6UjVOQ2xQTm52bnV1eU1DYTUxMlFxSFMKY0xuS1l2ZmZ2WFRhekhuVkEyZHkxbE1rUmRySDdsd1ZnYmZoSElVTTM4eXhIdGZhZFk1bytoaUdOekRUN0lMRApPSGNROC9FYnhjYkNueDgxL3ViQnFDd2hkTG9IeEFXM1Bra3hUeFc0R24xcFpyakw2UmVXa29oS0xVSWlwckNVCmFBVE03S1NlZ3VFdEgvSnZmV0U4VWw5bCtvZGpmVEZuUGtLR3NUZjhtNk5FQyttZW0yT3ZPci9naUF2V25UU3EKUkFkR2orUlgyZ3ZySTQ1UWFFOFh1SXZpNUs3aXVnTHlQTDVoNitwTkZvNlM4bTV5V0RHWVIrZ3NxL3ovR2EyVQozOWpBYjg5cVdNT1RrQWUyMGFFNzJacnV0ZC9uQ3o1RkR0Wngrb0lmNzhEYwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMGtlUUI5VHhkSzNNcDRkeVVJZ3hQa3pDZko1L242SlcvcmhnRk1KdVVGTjdMQ3pUCnVrQkRIZFp2UlNWOXNnS0MrZS9WNmdhM2F5dVNiZit5Q2ZjdXhRY2RvaDNTcHBkOWt6WllUbGdQUmIwNWRhTWIKRjVSeko2QU0rQWE4UFdDdUtaYVRrT2x0YkZHa3VWNFBGSDg1dWJCTmozZ3ptRHJnMWJpSGxxQkkzbVk5MGVXRwpRMGNMbC9ZVGw0dFR0czVIb1ZXc2JyTjNTVmN2WFlsZ1ZYWVQxN2Q1YkVwODVPT0JlUGhlZm5xL0p4MDk5cUJtCmdieHoyRHFKSEU2VklvTTF3eWhhbHZYT1VLNGo5ZFM4bnBDL1IvdEVWS3BEdEZIdlJmWTJTUUlQcGJGYXZJYnQKSGhHcHVFYll6UGVMVjg3cFpYWHgwUlNhWDFxYWc5NWtNdm5mN1FJREFRQUJBb0lCQUgranlzekdPRzZ2MU10WQpUMDZNN1A4NUR0RWdVSzJ3bUFmMEdQWmc4eDgxSFU0NlE2Y0p2UFBPcHlvYzBNaU45NzBKRlJzQ1NySDE5K05uClUwWHpVZU50SjFLeHNaMUgxWVRYZHhEUEtTNFc1MXI5ejhNbmJDTUFadjdpNzc1K0FobmllZDU3b3QwZVRkUHIKUVZJYXpBcG45eHlBUlNsQmpCcU84VmJBSXB0RDhMRzRVUTI3SGJsNDBlZ01VYmlpM0RWRHQ3aWVqSFFNbS94Vgo4Ynp0RU1iOW1CMVNUYnN0V1hGWXk1MkN5TGJuZlJLajFkb09pSS80L0JhSkpqdEoyUG02ZmhnSWw3aHQ0UHVWCjliclhiNkRLVFN3LzJlQTNWUmd5WDR6eGVGaUhhQzdKeFlRa0FXZ05VRG9MbGNnbUIvRUtycXhhYUpBVG9iQ3YKRWNBSmNVRUNnWUVBNE80dm0xdEVYeXR6cURudHNKR3NpSGxUb1Y4Z0VVRFJXaTBkY3g4NDIwdlVpTTBoNXRQagpsaFk1MFMraGlUUTdXNEpTZUVsSHpTUEhSaUsrSXBieng4TUFTMnFCWmRLa3JIbzZGSEM1cVZwZmFvbHZ6d3RtClFVY2JNNy8zb0lnSnY5NTRvSTVSSTdENUpzbW1wdEp3YVBwcVNUZGY0QW9GeS8vTnp1L0Y2TDBDZ1lFQTcxTk4KemExYUtmMmp4dmMwT3NxbUVhZTQydnNtQzAvZEJnVWgyYVNtVXJGQ2lvT3d0ZGpRS29MSXFYZHp4VTFRdlBGSQpua29JeEZlaG9JaUtiUEdWZlc5ZC9uMTU4QWZ6K2hIczA0OXNTSlFUYXVsSDNhME0rdUZhZDc2ZTBOZGU1U1htCktzQmFuK0tLY3RlbmRlVUVhR1VidGJ3SDdmWEhtWkk1VFdzOFB2RUNnWUVBM1VuNEZFUHFOQ2N2bGlYSHJwcmkKdnpGK0VaamdsNWpKWG9wY0d0Snd3VzhOSGJtU3pPRlJXbXRyWGw0WjhqNHMxNDZUVER2c0krbzdOc2tmZmpBOApqaDlPdnVOOWdvdUY3eG9nNGRNMUZXUVAwMlI3VjVyRGN4MWRxY0FIQXl4VFN5eTRTRjA3Zm4yeDRYTXFQWjF6CmNoUkxWTlRod2l5YUgyVC9PY096VlpFQ2dZQXljQ2dSbE50UHhqamlFZTljQktHRFR3blNmT1BEdG8wcVc2S0sKci95dHFOWVJRemZXMjE3ajFyUmJvdVV2UytBY01lM1FEbUpTbnZWZFUrbDRsR0doRWZ1SlN3Q0w2ZUV0YnVHdQpwS2Q1bEZ1VFNKN3d4U3ZiSSt0aEdUZDNaQ3lIdHJrUGdZS1g5N0tlQ1gwdGg1cXFOY1RsUkQrWGt4a0I4S05MCkFiS3N3UUtCZ0VtRlVzbVNzaG5xcDA2NTdNMlJuY1Zkd0hDT2lCYzNWd2tJR0M1UXByQWtaZlZkd1BvQU5kMnoKYW1vbW9EZFhvYUlRWWN1bUhXTWRCNmtLRVY5N1VPTTNJTHMrT090YnNLMjBwUEd0OUJWeEFjS0Qra2plN1piUwp3RXdMaVVoNDIzZjBVbk5TZEF3ZUpQQUQ2TEVYNEFSNVE5RWNza2R6aDNWZTNIZ0dpUmFXCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-sp-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-sp-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-sp-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUVENDQWpXZ0F3SUJBZ0lSQUpMeVlPNzNSOGNWT08yOXpaSUJCMDB3RFFZSktvWklodmNOQVFFTEJRQXcKS3pFcE1DY0dBMVVFQXhNZ2JHbHVhMlZ5WkMxemNDMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13SGhjTgpNakl3T0RNeE1Ea3lNakExV2hjTk1qTXdPRE14TURreU1qQTFXakFyTVNrd0p3WURWUVFERXlCc2FXNXJaWEprCkxYTndMWFpoYkdsa1lYUnZjaTVzYVc1clpYSmtMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQU5KSGtBZlU4WFN0ektlSGNsQ0lNVDVNd255ZWY1K2lWdjY0WUJUQ2JsQlRleXdzMDdwQQpReDNXYjBVbGZiSUNndm52MWVvR3Qyc3JrbTMvc2duM0xzVUhIYUlkMHFhWGZaTTJXRTVZRDBXOU9YV2pHeGVVCmN5ZWdEUGdHdkQxZ3JpbVdrNURwYld4UnBMbGVEeFIvT2Jtd1RZOTRNNWc2NE5XNGg1YWdTTjVtUGRIbGhrTkgKQzVmMkU1ZUxVN2JPUjZGVnJHNnpkMGxYTDEySllGVjJFOWUzZVd4S2ZPVGpnWGo0WG41NnZ5Y2RQZmFnWm9HOApjOWc2aVJ4T2xTS0ROY01vV3BiMXpsQ3VJL1hVdko2UXYwZjdSRlNxUTdSUjcwWDJOa2tDRDZXeFdyeUc3UjRSCnFiaEcyTXozaTFmTzZXVjE4ZEVVbWw5YW1vUGVaREw1MyswQ0F3RUFBYU5zTUdvd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQ3NHQTFVZEVRUWtNQ0tDSUd4cGJtdGxjbVF0YzNBdGRtRnNhV1JoZEc5eUxteHBibXRsY21RdWMzWmpNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFEQXVVYTRLL2M4MXF1SnllNmR6UjVOQ2xQTm52bnV1eU1DYTUxMlFxSFMKY0xuS1l2ZmZ2WFRhekhuVkEyZHkxbE1rUmRySDdsd1ZnYmZoSElVTTM4eXhIdGZhZFk1bytoaUdOekRUN0lMRApPSGNROC9FYnhjYkNueDgxL3ViQnFDd2hkTG9IeEFXM1Bra3hUeFc0R24xcFpyakw2UmVXa29oS0xVSWlwckNVCmFBVE03S1NlZ3VFdEgvSnZmV0U4VWw5bCtvZGpmVEZuUGtLR3NUZjhtNk5FQyttZW0yT3ZPci9naUF2V25UU3EKUkFkR2orUlgyZ3ZySTQ1UWFFOFh1SXZpNUs3aXVnTHlQTDVoNitwTkZvNlM4bTV5V0RHWVIrZ3NxL3ovR2EyVQozOWpBYjg5cVdNT1RrQWUyMGFFNzJacnV0ZC9uQ3o1RkR0Wngrb0lmNzhEYwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["linkerd.io"]
    apiVersions: ["v1alpha1", "v1alpha2"]
    resources: ["serviceprofiles"]
  sideEffects: None
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-policy-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXRENDQWtDZ0F3SUJBZ0lRWWtqdHJUYXB2eDVVWVlDOW02dTVwREFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlSc2FXNXJaWEprTFhCdmJHbGplUzEyWVd4cFpHRjBiM0l1YkdsdWEyVnlaQzV6ZG1NdwpIaGNOTWpJd09ETXhNRGt5TWpBMVdoY05Nak13T0RNeE1Ea3lNakExV2pBdk1TMHdLd1lEVlFRREV5UnNhVzVyClpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUN3WmpxKzBhWVIxSzBlRmMyUWVSdTVJS09rc2RNRG5ud3JscWtJN1hqTwp3b3hhVFdodlF3bWNLUGJHMmJ1alcyMGxXcUJQQ0Z2T1ZvNnhZd3p3cWIyLzh6cS8yRmFIVFBMaDd0M041SDMyCkdHOTJoV3pYM2cvTmJxQTlLbDZvV1JXUzNMblBzKzJramE0WTFhY1hsSGNNREtzZ0pLT3JqY3N0UjlzQmpWM2sKTDZGSGgxMjY2VmZGUzlnWkR1VTd0YW1kN1NtL0hhaUQvTTlaQXlaOVl5Z2FXVXg3SldvaGdIUUIyMlh0STE5eQp5ejV3dTRmd0pWbXhQbVFMTWkxL2RNNVJBVk5CWnRtRkZMN2k3aUQzTHFuL0NIZ3lacEphRUFjWHpjMkVnbWFMCkw3Y1owYlpIbjloYXRkSXJJWW1zSEZlQndkS2MwRnN3czlYdjVHY2pUSmRYQWdNQkFBR2pjREJ1TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQXZCZ05WSFJFRUtEQW1naVJzYVc1clpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1CmEyVnlaQzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFKN3JIQ0dHNEdLWVZKWnRWcU91OStFbXVXZkoKK2N2Q1lzMVZacitsZElrL3VXTjY2RXFGcjVwSHlsSllmZEJibnMwM1RCWmpCREFIUXVpbDNpNk9CbC9COFREUwpiYnRlb1QxbHdlTDB0YzVBZU1HbEpPLyswYmMxUVNFeUM0ODJocmRHWVFrQXFlWDBNTjBueGRpRXMweWdSbTQyCklxbXZIdVA4dUlCQWtUMXQrREpsTjVnbzVjYXJiaTQrVzZET2JyTkJmdnVYYUY5NVNnSVpvcHZoMVdqcGxkdUIKa3JWUG4ycythY3NxRmFGZGVpRUJHMVJqTXhQQzNUZzAyeHVZanpnVXZvN05Rall6bHcvMnpKWUNHajBJcWptQwp3UDFQZHBkWHhESW9JbEgrUmVuQ1pTY01NRlliTjVBaGR2Q1I1R0JabnVsY0YxYXNqUXFNSXRCVlE1bz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBc0dZNnZ0R21FZFN0SGhYTmtIa2J1U0NqcExIVEE1NThLNWFwQ08xNHpzS01XazFvCmIwTUpuQ2oyeHRtN28xdHRKVnFnVHdoYnpsYU9zV01NOEttOXYvTTZ2OWhXaDB6eTRlN2R6ZVI5OWhodmRvVnMKMTk0UHpXNmdQU3BlcUZrVmt0eTV6N1B0cEkydUdOV25GNVIzREF5cklDU2pxNDNMTFVmYkFZMWQ1QytoUjRkZAp1dWxYeFV2WUdRN2xPN1dwbmUwcHZ4Mm9nL3pQV1FNbWZXTW9HbGxNZXlWcUlZQjBBZHRsN1NOZmNzcytjTHVICjhDVlpzVDVrQ3pJdGYzVE9VUUZUUVdiWmhSUys0dTRnOXk2cC93aDRNbWFTV2hBSEY4M05oSUptaXkrM0dkRzIKUjUvWVdyWFNLeUdKckJ4WGdjSFNuTkJiTUxQVjcrUm5JMHlYVndJREFRQUJBb0lCQUVkN3hnYVo4dEI2L1FTYQpGVW1jcW0xbEdxdWRIRVAxTDZDQ1YxRzAyaVgvbE56clRZejQvNlgydTdwdGRhcUhYRDJzOGhYVTcwODRxRzZlCkV4cGJ6dmRBVytodWhQSWpickc4R01wYzgrYU1sRzdWTnZ4cmtyL1BPc1JPclRsUGtIeUpVZ3NuZ1FBVUloOFMKUmJvNmdkdXlMbzdDQ2tsMUZvYnMvWVV0Z29UN1ZBUTZpZ29DYWlCcXpHRFBjb0YrV2VxajRBbVVZYmhIWWFHaQpaWWNWNy9YYkorUzBQNGlsdDhLOXNzOVZEVzdYZC9hYjB6N1RMcTB4ZGlsQXMvOFZ4cnZsbXgxTmZGVC9jVEUxCld2ZVpRVmVIK254aDJ6Z095R0JLcnZKWmZLVFg3dTdCOFlsVm9Dby9CckpWVWNmbmhqVGdWUmRtM0ZpZEh0bjIKbi91TXAxRUNnWUVBMXNxZDEwRzB5YTQ2eXRJL2FaZCs2K1UxbFdaNXp2MTBRbEdFaDFsVzZIZURBM0tPdHR3aQp0cGRnMkJtcW9oWXc4KzVQV2RCZGJ2YmZxUmhVeGpjSEJKaTZhaDlVMUgxaVM1ajdYWGtzdHpiYW1qZS83VGtjCjJ1YjJhUW4wb1ZZQTl6MHhtOURkUlRDZXc5UFUycFJ5WTBoTG1IN0xnMzBOOVRkWU5GQ3kxdk1DZ1lFQTBqNEEKTzV3Sml4TWJCODRsekxmUDFud2xXRlpjY3R4ZXhtNVljRnRURzBKcUNlRGFySmVKNGtXcGNaeVJULzdYcFo2RApjMmV2a3FqdzNqUEpaa2hRdktieE9oMFNTd2Flb1ZIZDAwK0xUSTM3MXMzVE01NE1aM0ZXVkhMQzFhc2ZqMk9NCkw0L0Z2Y3BoT3hlODdER1V1aXhBTlhSVVdZeEVXa3poeHMyZTN3MENnWUVBZ3FDdEI4bVZHb2JVaUo3L0k4ZVgKei8wUTduQnBLaUpvZnlDMmVkNHloYVNSVUJwdWd2VTBRMW1pOHlvQTVSeWIzdTRTNGl0ZmQybTZza3J5MjYyQgpuaUVJVmh3QjZrenE1OUQ5Sm1iWWRBQnZTQlVacXpydHVvOTJVb0ZVZm40Z2pqeHdIRFFWTGN3WThqMjFHTTNwCkYwcFRkMFc5blpVRFZSdTRqL0I0STFNQ2dZQTZMaDR5WU1QalVLNHlRc0lESFByUENCdnRqamlYTUpTcHBPK2sKYUNGZmNjbVdZanNoZCs0WVI5N1VLZGVzbzRGWnU3djB1OFRDZVMzdXo3WDBNQjdubGVzN2djQUdNeGJDM2J6ZApOUzMvU1d0ZnppV2NLeWlUbDdHa1BQM2QwelV3b1FPeVJiOGEvbDVaMC8vYi9QeURhS3Q4SDIwWU90RFBqR2NPCmRPaDZJUUtCZ1FDWlpibUdKZ3V0T0dtRWk5MHFTdEpkbXdHajlmQzhBdDNlMGE4NjROOC9yRDljYS8yOUhORDUKZFJoTzVrSmpma3pqN2RWdHFMU09BNUUrSDdaSzJXcVJCcXg0bjFzZTZBMURFbVZUWStZU044NmJrN1J2NWVtMQpSUDhhSWpEYWo1bkhJakhpUGR6NjhERTJXc3U1ZUhLVnZiYkg4ZUdoRC82U2ZTMmYxQVpZbWc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-policy-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-policy-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-policy-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXRENDQWtDZ0F3SUJBZ0lRWWtqdHJUYXB2eDVVWVlDOW02dTVwREFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlSc2FXNXJaWEprTFhCdmJHbGplUzEyWVd4cFpHRjBiM0l1YkdsdWEyVnlaQzV6ZG1NdwpIaGNOTWpJd09ETXhNRGt5TWpBMVdoY05Nak13T0RNeE1Ea3lNakExV2pBdk1TMHdLd1lEVlFRREV5UnNhVzVyClpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUN3WmpxKzBhWVIxSzBlRmMyUWVSdTVJS09rc2RNRG5ud3JscWtJN1hqTwp3b3hhVFdodlF3bWNLUGJHMmJ1alcyMGxXcUJQQ0Z2T1ZvNnhZd3p3cWIyLzh6cS8yRmFIVFBMaDd0M041SDMyCkdHOTJoV3pYM2cvTmJxQTlLbDZvV1JXUzNMblBzKzJramE0WTFhY1hsSGNNREtzZ0pLT3JqY3N0UjlzQmpWM2sKTDZGSGgxMjY2VmZGUzlnWkR1VTd0YW1kN1NtL0hhaUQvTTlaQXlaOVl5Z2FXVXg3SldvaGdIUUIyMlh0STE5eQp5ejV3dTRmd0pWbXhQbVFMTWkxL2RNNVJBVk5CWnRtRkZMN2k3aUQzTHFuL0NIZ3lacEphRUFjWHpjMkVnbWFMCkw3Y1owYlpIbjloYXRkSXJJWW1zSEZlQndkS2MwRnN3czlYdjVHY2pUSmRYQWdNQkFBR2pjREJ1TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQXZCZ05WSFJFRUtEQW1naVJzYVc1clpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1CmEyVnlaQzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFKN3JIQ0dHNEdLWVZKWnRWcU91OStFbXVXZkoKK2N2Q1lzMVZacitsZElrL3VXTjY2RXFGcjVwSHlsSllmZEJibnMwM1RCWmpCREFIUXVpbDNpNk9CbC9COFREUwpiYnRlb1QxbHdlTDB0YzVBZU1HbEpPLyswYmMxUVNFeUM0ODJocmRHWVFrQXFlWDBNTjBueGRpRXMweWdSbTQyCklxbXZIdVA4dUlCQWtUMXQrREpsTjVnbzVjYXJiaTQrVzZET2JyTkJmdnVYYUY5NVNnSVpvcHZoMVdqcGxkdUIKa3JWUG4ycythY3NxRmFGZGVpRUJHMVJqTXhQQzNUZzAyeHVZanpnVXZvN05Rall6bHcvMnpKWUNHajBJcWptQwp3UDFQZHBkWHhESW9JbEgrUmVuQ1pTY01NRlliTjVBaGR2Q1I1R0JabnVsY0YxYXNqUXFNSXRCVlE1bz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["policy.linkerd.io"]
    apiVersions: ["v1alpha1", "v1beta1"]
    resources:
    - authorizationpolicies
    - httproutes
    - networkauthentications
    - meshtlsauthentications
    - serverauthorizations
    - servers
  sideEffects: None
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - policy.linkerd.io
    resources:
      - authorizationpolicies
      - httproutes
      - meshtlsauthentications
      - networkauthentications
      - servers
      - serverauthorizations
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-destination-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-policy
subjects:
  - kind: ServiceAccount
    name: linkerd-destination
    namespace: linkerd
---
###
### Heartbeat RBAC
###
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get"]
  resourceNames: ["linkerd-config"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: Role
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["list"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: ClusterRole
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd
---
###
### Proxy Injector RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
- apiGroups: [""]
  resources: ["namespaces", "replicationcontrollers"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list", "watch"]
- apiGroups: ["extensions", "apps"]
  resources: ["deployments", "replicasets", "daemonsets", "statefulsets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["extensions", "batch"]
  resources: ["cronjobs", "jobs"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
subjects:
- kind: ServiceAccount
  name: linkerd-proxy-injector
  namespace: linkerd
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: linkerd-linkerd-proxy-injector
  apiGroup: rbac.authorization.k8s.io
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-proxy-injector-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVekNDQWp1Z0F3SUJBZ0lSQUpRODU2ZmRobndIS3J4R1JFdUlQME13RFFZSktvWklodmNOQVFFTEJRQXcKTFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5WkMxd2NtOTRlUzFwYm1wbFkzUnZjaTVzYVc1clpYSmtMbk4yWXpBZQpGdzB5TWpBNE16RXdPVEl5TURWYUZ3MHlNekE0TXpFd09USXlNRFZhTUMweEt6QXBCZ05WQkFNVElteHBibXRsCmNtUXRjSEp2ZUhrdGFXNXFaV04wYjNJdWJHbHVhMlZ5WkM1emRtTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUEKQTRJQkR3QXdnZ0VLQW9JQkFRQzdmRFNPTkQ3dk9WQ3cwZUxQTG1jVXFpYXdNY0J6SWhJS2tHZi9oMVZVRm96UQpJRjYrc3o5ZkRRejl3S2JENGY5MEdrUU9ESDNMa1BJWXFUZG80WGttdmo1bCthMk1td1ZMejFRY3VjNlRtNlRtCnFZTDlYZHVON3l3N3lUL3MyL3ZQREdSZUNmWVA5UVQyWC8xbDg3eVhvbFI5TWJIb3FxVjhCbnBMalJPa3J5MVEKWjdIekR1dDBjVmwyZXRWcjM0QTl2Yi9Wc080eVlZVWdaMEVHSXdMUU55OWZGdEM5c1NybFFQVVN4dER2bVR6QQpIck1Qd2RuTHlOam8rbjlEbG96YnNoZ0JEUzRPRmJVWTlIS3AzVHRJcjZXTkpHdnN3N1hPQjA5eDZ6QVRnUmJCCmFmUDQxd0R3WDJzTE1DQkoxNFNWUDVTZ1pycGVmQzQvRlRqTE9halhBZ01CQUFHamJqQnNNQTRHQTFVZER3RUIKL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFILwpCQUl3QURBdEJnTlZIUkVFSmpBa2dpSnNhVzVyWlhKa0xYQnliM2g1TFdsdWFtVmpkRzl5TG14cGJtdGxjbVF1CmMzWmpNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUN4cXMzMnc4dDZiMGpWWFZDcC85RHFBQXN2K2NxYzcyUEYKYURMNE5yM3dwclNpcTY3R2V1aXFjcUlwSGtrclJ2QytNbVN6STBxUExFdklicW10OU5CclhyVW1ieHo5aGxoTgpzNXdzWTNOa3AvN1RKOTAvdmRLRkFYZ1cxNWU2aDFaUDRJMENOUGEyVUJIL1I1bzBiOEtmZzBZcEFCY3JyazJECk5IZlVQTGkxaU9YTFZBZHRUUjRBTkxjQTFKWERKbkcyam5mVnBmbVRSQ1FYbUFuQnVTeEFZL3gwNWE4S2g5RlgKTEdDY29zTUc1VUlGRHZvZkNkdU5TV1ZKZSs0bXB1UmRzZVhmam15RnZpa3E4UWJQRWtWWEtSZGMvaEpCUnpCbQpYWkQ4N2RjRXhhWnFtNnBTcGw3M2JGeTFtbkFRTU16MzJVUnpkdXZnOXpoSzNrWGd1YzNQCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdTN3MGpqUSs3emxRc05IaXp5NW5GS29tc0RIQWN5SVNDcEJuLzRkVlZCYU0wQ0JlCnZyTS9YdzBNL2NDbXcrSC9kQnBFRGd4OXk1RHlHS2szYU9GNUpyNCtaZm10akpzRlM4OVVITG5PazV1azVxbUMKL1YzYmplOHNPOGsvN052N3p3eGtYZ24yRC9VRTlsLzlaZk84bDZKVWZUR3g2S3FsZkFaNlM0MFRwSzh0VUdleAo4dzdyZEhGWmRuclZhOStBUGIyLzFiRHVNbUdGSUdkQkJpTUMwRGN2WHhiUXZiRXE1VUQxRXNiUTc1azh3QjZ6CkQ4SFp5OGpZNlBwL1E1YU0yN0lZQVEwdURoVzFHUFJ5cWQwN1NLK2xqU1JyN01PMXpnZFBjZXN3RTRFV3dXbnoKK05jQThGOXJDekFnU2RlRWxUK1VvR2E2WG53dVB4VTR5em1vMXdJREFRQUJBb0lCQVFDTENGaVErLzJQdVprMQpCdkNEWTQzZHJUQnppUEdHYjhXaFArVmZnU1N0N3VzTmpITzJSNGEvSGhaOE50bDBlYXZPbFl2U1AwRXFMSnJiCjN1RFFUaVJocnNMbkxIaWV4SGJ3K1JjUEZsc3k2MEVtTEo2TzlZTlRoZ0h2ZEJhTHQ3Yk1uQXZ5RU1FQXBGckIKdWYxWUZaL05jdnZrdTIyTGRNQ3pjTHBRUEpaTWtMWk5RMHdLblZkVXBlYzAzTFZWaHZFYXBzYlpjdms2Q21kVAowRU5QNm9ra1I0K05pN0Y3RkpaT1BoK3BQQmhkdDBTdFYrd0E1R2FRa05MWTNKTEUrWHBkSVpmbXh3VXBZNVErCklhUXpYRVNWazRXVXNpTEgybmZrUlU0bFMrbzB3bWJUN3UrQjkzdWU4b3gvL2NvWCtEZUlIL2wwa0hIZmt2ekYKVCtabEx5SEJBb0dCQU0reE05STdQSCt1ZHpUN1MvY1p6dmRxWUwxREcxMG9MeW1CS1FoRStJT21iM2w5dXRRRgo5bkxMVTFZN2Q3S1h2YXZnYkZ1dUtRRXdpSktmblRFUWVmVkE3YmhnNmVSaUpFUVdaRWVramlLU0MwdmRJaWJGCnc5ZHI0K2dGWlpjMkp5NGN1WjlrMWFkRytqTVdIMzdsNk4wNlpsSktudFFxME9uTWh3bTFMNS9yQW9HQkFPY1gKekhTbXlrY1o1R3VPZ1RMQjF0b2x0SkdpN01nM2VsNG82cFFjNm5zS0srWWxVRnlYcTh0WUpVR1d1eDFkUzdBSQpkcitXeG9kVm81OWNpb3RydWJGOFhRVWJaeHkvazVEeGJHRUVqRWl6ZXg3eGZ1dzZCT0o2UWRENGYvUDN0TjYxCkFqdDFQNXFGOXlHR2hSZ2NQWFUvcThnbHhnTGJYRHR0anV4RWZZdkZBb0dBVlhyTUprR0ZFOVBkY2l2ZlJ4TVQKTUpkU3UzS01KNW9yVnZ5Mnc1V0hacit3YjZORXFwRE5yczlxUERwN2VFQ2xxc0RTT0NXRThOMWx5RnJ6R2tkNgp1bXIvcS93UEo1VVE4Z2o1T3RkS1BJWTVLZjhZV0RiYTlLV09CbWQ2T1hMclN6bzlWNUhyc1U0d0dhaUlTL1VhCkV6cys4NjJNa3l3UUVibkE5a2poRWdNQ2dZRUF3N0dwbUJjdU1HdkN2VHBlT21kZjFEZ2Q0ejUvR1VXeHdFOFIKNXY5ZHFYZ0JtTkY4Ymd5YWxJWStkbjU0VWZPUmhxNkVNTll6cEtObS9pclZ3Qjhuang5cmZrbW9WZlg5dHI1YgpNd1V3N3RmZXFXT0VRZk1YODlub0psaHBzbVhQcXRESjVTUHpDcDNybTE1WkV3UEhINlVkaVU1RGttUEVoU2JQCjQxQlVxS2tDZ1lBWCswNGJ6QStRQ1dJQnRDSGd5aHRMMlE3RytlVDgrRm8vRGxQMVFranROWEppcHRxV3RINGMKazhyeHEzM0hDekV6WmN1dWYwYXVXU293THhjVEIwMURLQndINXhFSGkzalU2U0M4am11TWpBS003ZUdxS1czWgpPNGhsS3RoS2VGanQ4b0I2bzNyTjhacTB4N2RYN3orSzlsYmFHUXhyTmh6NnR6RlI4ZzlWeGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: linkerd-proxy-injector-webhook-config
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-proxy-injector.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
    - key: kubernetes.io/metadata.name
      operator: NotIn
      values:
      - kube-system
      - cert-manager
  objectSelector:
    null
  clientConfig:
    service:
      name: linkerd-proxy-injector
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVekNDQWp1Z0F3SUJBZ0lSQUpRODU2ZmRobndIS3J4R1JFdUlQME13RFFZSktvWklodmNOQVFFTEJRQXcKTFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5WkMxd2NtOTRlUzFwYm1wbFkzUnZjaTVzYVc1clpYSmtMbk4yWXpBZQpGdzB5TWpBNE16RXdPVEl5TURWYUZ3MHlNekE0TXpFd09USXlNRFZhTUMweEt6QXBCZ05WQkFNVElteHBibXRsCmNtUXRjSEp2ZUhrdGFXNXFaV04wYjNJdWJHbHVhMlZ5WkM1emRtTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUEKQTRJQkR3QXdnZ0VLQW9JQkFRQzdmRFNPTkQ3dk9WQ3cwZUxQTG1jVXFpYXdNY0J6SWhJS2tHZi9oMVZVRm96UQpJRjYrc3o5ZkRRejl3S2JENGY5MEdrUU9ESDNMa1BJWXFUZG80WGttdmo1bCthMk1td1ZMejFRY3VjNlRtNlRtCnFZTDlYZHVON3l3N3lUL3MyL3ZQREdSZUNmWVA5UVQyWC8xbDg3eVhvbFI5TWJIb3FxVjhCbnBMalJPa3J5MVEKWjdIekR1dDBjVmwyZXRWcjM0QTl2Yi9Wc080eVlZVWdaMEVHSXdMUU55OWZGdEM5c1NybFFQVVN4dER2bVR6QQpIck1Qd2RuTHlOam8rbjlEbG96YnNoZ0JEUzRPRmJVWTlIS3AzVHRJcjZXTkpHdnN3N1hPQjA5eDZ6QVRnUmJCCmFmUDQxd0R3WDJzTE1DQkoxNFNWUDVTZ1pycGVmQzQvRlRqTE9halhBZ01CQUFHamJqQnNNQTRHQTFVZER3RUIKL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFILwpCQUl3QURBdEJnTlZIUkVFSmpBa2dpSnNhVzVyWlhKa0xYQnliM2g1TFdsdWFtVmpkRzl5TG14cGJtdGxjbVF1CmMzWmpNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUN4cXMzMnc4dDZiMGpWWFZDcC85RHFBQXN2K2NxYzcyUEYKYURMNE5yM3dwclNpcTY3R2V1aXFjcUlwSGtrclJ2QytNbVN6STBxUExFdklicW10OU5CclhyVW1ieHo5aGxoTgpzNXdzWTNOa3AvN1RKOTAvdmRLRkFYZ1cxNWU2aDFaUDRJMENOUGEyVUJIL1I1bzBiOEtmZzBZcEFCY3JyazJECk5IZlVQTGkxaU9YTFZBZHRUUjRBTkxjQTFKWERKbkcyam5mVnBmbVRSQ1FYbUFuQnVTeEFZL3gwNWE4S2g5RlgKTEdDY29zTUc1VUlGRHZvZkNkdU5TV1ZKZSs0bXB1UmRzZVhmam15RnZpa3E4UWJQRWtWWEtSZGMvaEpCUnpCbQpYWkQ4N2RjRXhhWnFtNnBTcGw3M2JGeTFtbkFRTU16MzJVUnpkdXZnOXpoSzNrWGd1YzNQCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: [ "CREATE" ]
    apiGroups: [""]
    apiVersions: ["v1"]
    resources: ["pods", "services"]
  sideEffects: None
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-config
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
data:
  linkerd-crds-chart-version: linkerd-crds-1.0.0-edge
  values: |
    cliVersion: linkerd/cli stable-2.12.0
    clusterDomain: cluster.local
    clusterNetworks: 10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
    cniEnabled: false
    controlPlaneTracing: false
    controlPlaneTracingNamespace: linkerd-jaeger
    controllerImage: cr.l5d.io/linkerd/controller
    controllerLogFormat: plain
    controllerLogLevel: info
    controllerReplicas: 1
    controllerUID: 2103
    debugContainer:
      image:
        name: cr.l5d.io/linkerd/debug
        pullPolicy: ""
        version: stable-2.12.0
    deploymentStrategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
    destinationProxyResources: null
    destinationResources: null
    disableHeartBeat: false
    enableEndpointSlices: true
    enableH2Upgrade: true
    enablePodAntiAffinity: false
    enablePodDisruptionBudget: false
    heartbeatResources: null
    heartbeatSchedule: ""
    highAvailability: false
    identity:
      issuer:
        clockSkewAllowance: 20s
        externalCA: false
        issuanceLifetime: 24h0m0s
        scheme: linkerd.io/tls
        tls:
          crtPEM: |
            -----BEGIN CERTIFICATE-----
            MIIBiTCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
            eS5saW5rZXJkLjAeFw0yMjA4MzEwOTIxNTVaFw0yMzA4MzEwOTIyMTVaMBwxGjAY
            BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
            QgAEkcS1R1dmAcJMp3GMicI3bbZLcn+O7uibLIWZD5kdB+JBjfFUz/HxkmW9liWW
            YtV/ZzV4SrjCrJcEte/ijms+8KNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
            MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
            BBSlcbGbwt0z+xej/cMeY/AQsCZPeTAKBggqhkjOPQQDAgNJADBGAiEA3ZxPrV1X
            AcbvXEC/pj5y/TfSyvNACpC6JMCJlCzDoBICIQCZvyqXBhIN4yzlKgCVR0/Ztxuf
            gFkei6Sdao9YnDERUw==
            -----END CERTIFICATE-----
      serviceAccountTokenProjection: true
    identityProxyResources: null
    identityResources: null
    identityTrustAnchorsPEM: |
      -----BEGIN CERTIFICATE-----
      MIIBiTCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
      eS5saW5rZXJkLjAeFw0yMjA4MzEwOTIxNTVaFw0yMzA4MzEwOTIyMTVaMBwxGjAY
      BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
      QgAEkcS1R1dmAcJMp3GMicI3bbZLcn+O7uibLIWZD5kdB+JBjfFUz/HxkmW9liWW
      YtV/ZzV4SrjCrJcEte/ijms+8KNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
      MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
      BBSlcbGbwt0z+xej/cMeY/AQsCZPeTAKBggqhkjOPQQDAgNJADBGAiEA3ZxPrV1X
      AcbvXEC/pj5y/TfSyvNACpC6JMCJlCzDoBICIQCZvyqXBhIN4yzlKgCVR0/Ztxuf
      gFkei6Sdao9YnDERUw==
      -----END CERTIFICATE-----
    identityTrustDomain: cluster.local
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []
    linkerdVersion: stable-2.12.0
    nodeAffinity: null
    nodeSelector:
      kubernetes.io/os: linux
    podAnnotations: {}
    podLabels: {}
    policyController:
      image:
        name: cr.l5d.io/linkerd/policy-controller
        pullPolicy: ""
        version: ""
      logLevel: info
      probeNetworks:
      - 0.0.0.0/0
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
    policyValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    priorityClassName: ""
    profileValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    prometheusUrl: ""
    proxy:
      accessLog: ""
      await: true
      capabilities: null
      defaultInboundPolicy: all-unauthenticated
      enableExternalProfiles: false
      image:
        name: cr.l5d.io/linkerd/proxy
        pullPolicy: ""
        version: stable-2.12.0
      inboundConnectTimeout: 100ms
      isGateway: false
      isIngress: false
      logFormat: plain
      logLevel: warn,linkerd=info
      opaquePorts: 25,587,3306,4444,5432,6379,9300,11211
      outboundConnectTimeout: 1000ms
      podInboundPorts: ""
      ports:
        admin: 4191
        control: 4190
        inbound: 4143
        outbound: 4140
      requireIdentityOnInboundPorts: ""
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
      saMountPath: null
      shutdownGracePeriod: ""
      uid: 2102
      waitBeforeExitSeconds: 0
    proxyContainerName: linkerd-proxy
    proxyInit:
      capabilities: null
      closeWaitTimeoutSecs: 0
      ignoreInboundPorts: 4567,4568
      ignoreOutboundPorts: 4567,4568
      image:
        name: cr.l5d.io/linkerd/proxy-init
        pullPolicy: ""
        version: v2.0.0
      iptablesMode: legacy
      logFormat: ""
      logLevel: ""
      resources:
        cpu:
          limit: 100m
          request: 100m
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: 20Mi
          request: 20Mi
      runAsRoot: false
      runAsUser: 65534
      saMountPath: null
      skipSubnets: ""
      xtMountPath:
        mountPath: /run
        name: linkerd-proxy-init-xtables-lock
        readOnly: false
    proxyInjector:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
        - key: kubernetes.io/metadata.name
          operator: NotIn
          values:
          - kube-system
          - cert-manager
    proxyInjectorProxyResources: null
    proxyInjectorResources: null
    tolerations: null
    webhookFailurePolicy: Ignore
---
###
### Identity Controller Service
###
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-identity-issuer
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
data:
  crt.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpVENDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKZVM1c2FXNXJaWEprTGpBZUZ3MHlNakE0TXpFd09USXhOVFZhRncweU16QTRNekV3T1RJeU1UVmFNQnd4R2pBWQpCZ05WQkFNVEVXbGtaVzUwYVhSNUxteHBibXRsY21RdU1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEClFnQUVrY1MxUjFkbUFjSk1wM0dNaWNJM2JiWkxjbitPN3VpYkxJV1pENWtkQitKQmpmRlV6L0h4a21XOWxpV1cKWXRWL1p6VjRTcmpDckpjRXRlL2lqbXMrOEtOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwpNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXCkJCU2xjYkdid3Qweit4ZWovY01lWS9BUXNDWlBlVEFLQmdncWhrak9QUVFEQWdOSkFEQkdBaUVBM1p4UHJWMVgKQWNidlhFQy9wajV5L1RmU3l2TkFDcEM2Sk1DSmxDekRvQklDSVFDWnZ5cVhCaElONHl6bEtnQ1ZSMC9adHh1ZgpnRmtlaTZTZGFvOVluREVSVXc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  key.pem: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSVB2NFI0aDB4LzYyVU0rNmd0OE5oaWg2R1NlbFNRRDVXU3ZWNzdyb3MrdnpvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFa2NTMVIxZG1BY0pNcDNHTWljSTNiYlpMY24rTzd1aWJMSVdaRDVrZEIrSkJqZkZVei9IeAprbVc5bGlXV1l0Vi9aelY0U3JqQ3JKY0V0ZS9pam1zKzhBPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQ==
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-identity-trust-roots
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
data:
  ca-bundle.crt: |
    -----BEGIN CERTIFICATE-----
    MIIBiTCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
    eS5saW5rZXJkLjAeFw0yMjA4MzEwOTIxNTVaFw0yMzA4MzEwOTIyMTVaMBwxGjAY
    BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
    QgAEkcS1R1dmAcJMp3GMicI3bbZLcn+O7uibLIWZD5kdB+JBjfFUz/HxkmW9liWW
    YtV/ZzV4SrjCrJcEte/ijms+8KNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
    MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
    BBSlcbGbwt0z+xej/cMeY/AQsCZPeTAKBggqhkjOPQQDAgNJADBGAiEA3ZxPrV1X
    AcbvXEC/pj5y/TfSyvNACpC6JMCJlCzDoBICIQCZvyqXBhIN4yzlKgCVR0/Ztxuf
    gFkei6Sdao9YnDERUw==
    -----END CERTIFICATE-----
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
  labels:
    app.kubernetes.io/name: identity
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.0
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-identity
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: identity
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-identity
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.12.0
        linkerd.io/proxy-version: stable-2.12.0
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 4640130bd70d35611ab935e7ab6836496557df4eb4689cd3ead6602982359158
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: identity
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-identity
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - args:
        - identity
        - -log-level=info
        - -log-format=plain
        - -controller-namespace=linkerd
        - -identity-trust-domain=cluster.local
        - -identity-issuance-lifetime=24h0m0s
        - -identity-clock-skew-allowance=20s
        - -identity-scheme=linkerd.io/tls
        - -enable-pprof=false
        env:
        - name: LINKERD_DISABLED
          value: "linkerd-await cannot block the identity controller"
        image: cr.l5d.io/linkerd/controller:stable-2.12.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9990
          initialDelaySeconds: 10
        name: identity
        ports:
        - containerPort: 8080
          name: grpc
        - containerPort: 9990
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9990
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/issuer
          name: identity-issuer
        - mountPath: /var/run/linkerd/identity/trust-roots/
          name: trust-roots
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_INBOUND_PORTS_REQUIRE_TLS
          value: "8080"
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8080,9990"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: localhost.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.12.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443"
        image: cr.l5d.io/linkerd/proxy-init:v2.2.3
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-identity
      volumes:
      - name: identity-issuer
        secret:
          secretName: linkerd-identity-issuer
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Destination Controller Service
###
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-sp-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: sp-validator
    port: 443
    targetPort: sp-validator
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8090
    targetPort: 8090
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: policy-https
    port: 443
    targetPort: policy-https
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
  labels:
    app.kubernetes.io/name: destination
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.0
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-destination
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: destination
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-destination
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.12.0
        linkerd.io/proxy-version: stable-2.12.0
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 4640130bd70d35611ab935e7ab6836496557df4eb4689cd3ead6602982359158
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: destination
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-destination
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: localhost.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: localhost.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8086,8090,8443,9443,9990,9996,9997"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.12.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - destination
        - -addr=:8086
        - -controller-namespace=linkerd
        - -enable-h2-upgrade=true
        - -log-level=info
        - -log-format=plain
        - -enable-endpoint-slices=true
        - -cluster-domain=cluster.local
        - -identity-trust-domain=cluster.local
        - -default-opaque-ports=25,587,3306,4444,5432,6379,9300,11211
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.12.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9996
          initialDelaySeconds: 10
        name: destination
        ports:
        - containerPort: 8086
          name: grpc
        - containerPort: 9996
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9996
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
      - args:
        - sp-validator
        - -log-level=info
        - -log-format=plain
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.12.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9997
          initialDelaySeconds: 10
        name: sp-validator
        ports:
        - containerPort: 8443
          name: sp-validator
        - containerPort: 9997
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9997
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: sp-tls
          readOnly: true
      - args:
        - --admin-addr=0.0.0.0:9990
        - --control-plane-namespace=linkerd
        - --grpc-addr=0.0.0.0:8090
        - --server-addr=0.0.0.0:9443
        - --server-tls-key=/var/run/linkerd/tls/tls.key
        - --server-tls-certs=/var/run/linkerd/tls/tls.crt
        - --cluster-networks=10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
        - --identity-domain=cluster.local
        - --default-policy=all-unauthenticated
        - --log-level=info
        - --log-format=plain
        - --probe-networks=0.0.0.0/0
        image: cr.l5d.io/linkerd/policy-controller:stable-2.12.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: admin
        name: policy
        ports:
        - containerPort: 8090
          name: grpc
        - containerPort: 9990
          name: admin
        - containerPort: 9443
          name: policy-https
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: admin
          initialDelaySeconds: 10
        resources:
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: policy-tls
          readOnly: true
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443"
        image: cr.l5d.io/linkerd/proxy-init:v2.2.3
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-destination
      volumes:
      - name: sp-tls
        secret:
          secretName: linkerd-sp-validator-k8s-tls
      - name: policy-tls
        secret:
          secretName: linkerd-policy-validator-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Heartbeat
###
apiVersion: batch/v1
kind: CronJob
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    app.kubernetes.io/name: heartbeat
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.0
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
spec:
  concurrencyPolicy: Replace
  schedule: "32 09 * * *"
  successfulJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            linkerd.io/control-plane-component: heartbeat
            linkerd.io/workload-ns: linkerd
          annotations:
            linkerd.io/created-by: linkerd/cli stable-2.12.0
        spec:
          nodeSelector:
            kubernetes.io/os: linux
          serviceAccountName: linkerd-heartbeat
          restartPolicy: Never
          containers:
          - name: heartbeat
            image: cr.l5d.io/linkerd/controller:stable-2.12.0
            imagePullPolicy: IfNotPresent
            env:
            - name: LINKERD_DISABLED
              value: "the heartbeat controller does not use the proxy"
            args:
            - "heartbeat"
            - "-controller-namespace=linkerd"
            - "-log-level=info"
            - "-log-format=plain"
            - "-prometheus-url=http://prometheus.linkerd-viz.svc.cluster.local:9090"
            securityContext:
              runAsUser: 2103
              allowPrivilegeEscalation: false
---
###
### Proxy Injector
###
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
  labels:
    app.kubernetes.io/name: proxy-injector
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.0
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-proxy-injector
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: proxy-injector
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.12.0
        linkerd.io/proxy-version: stable-2.12.0
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 4640130bd70d35611ab935e7ab6836496557df4eb4689cd3ead6602982359158
        config.linkerd.io/opaque-ports: "8443"
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: proxy-injector
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-proxy-injector
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8443,9995"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.12.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - proxy-injector
        - -log-level=info
        - -log-format=plain
        - -linkerd-namespace=linkerd
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.12.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9995
          initialDelaySeconds: 10
        name: proxy-injector
        ports:
        - containerPort: 8443
          name: proxy-injector
        - containerPort: 9995
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9995
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/config
          name: config
        - mountPath: /var/run/linkerd/identity/trust-roots
          name: trust-roots
        - mountPath: /var/run/linkerd/tls
          name: tls
          readOnly: true
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "4567,4568"
        image: cr.l5d.io/linkerd/proxy-init:v2.2.3
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-proxy-injector
      volumes:
      - configMap:
          name: linkerd-config
        name: config
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - name: tls
        secret:
          secretName: linkerd-proxy-injector-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
    config.linkerd.io/opaque-ports: "443"
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: proxy-injector
  ports:
  - name: proxy-injector
    port: 443
    targetPort: proxy-injector
---
apiVersion: v1
data:
  linkerd-config-overrides: aWRlbnRpdHk6CiAgaXNzdWVyOgogICAgdGxzOgogICAgICBjcnRQRU06IHwKICAgICAgICAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KICAgICAgICBNSUlCaVRDQ0FTNmdBd0lCQWdJQkFUQUtCZ2dxaGtqT1BRUURBakFjTVJvd0dBWURWUVFERXhGcFpHVnVkR2wwCiAgICAgICAgZVM1c2FXNXJaWEprTGpBZUZ3MHlNakE0TXpFd09USXhOVFZhRncweU16QTRNekV3T1RJeU1UVmFNQnd4R2pBWQogICAgICAgIEJnTlZCQU1URVdsa1pXNTBhWFI1TG14cGJtdGxjbVF1TUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKICAgICAgICBRZ0FFa2NTMVIxZG1BY0pNcDNHTWljSTNiYlpMY24rTzd1aWJMSVdaRDVrZEIrSkJqZkZVei9IeGttVzlsaVdXCiAgICAgICAgWXRWL1p6VjRTcmpDckpjRXRlL2lqbXMrOEtOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwogICAgICAgIE1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKICAgICAgICBCQlNsY2JHYnd0MHoreGVqL2NNZVkvQVFzQ1pQZVRBS0JnZ3Foa2pPUFFRREFnTkpBREJHQWlFQTNaeFByVjFYCiAgICAgICAgQWNidlhFQy9wajV5L1RmU3l2TkFDcEM2Sk1DSmxDekRvQklDSVFDWnZ5cVhCaElONHl6bEtnQ1ZSMC9adHh1ZgogICAgICAgIGdGa2VpNlNkYW85WW5ERVJVdz09CiAgICAgICAgLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQogICAgICBrZXlQRU06IHwKICAgICAgICAtLS0tLUJFR0lOIEVDIFBSSVZBVEUgS0VZLS0tLS0KICAgICAgICBNSGNDQVFFRUlQdjRSNGgweC82MlVNKzZndDhOaGloNkdTZWxTUUQ1V1N2Vjc3cm9zK3Z6b0FvR0NDcUdTTTQ5CiAgICAgICAgQXdFSG9VUURRZ0FFa2NTMVIxZG1BY0pNcDNHTWljSTNiYlpMY24rTzd1aWJMSVdaRDVrZEIrSkJqZkZVei9IeAogICAgICAgIGttVzlsaVdXWXRWL1p6VjRTcmpDckpjRXRlL2lqbXMrOEE9PQogICAgICAgIC0tLS0tRU5EIEVDIFBSSVZBVEUgS0VZLS0tLS0KaWRlbnRpdHlUcnVzdEFuY2hvcnNQRU06IHwKICAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KICBNSUlCaVRDQ0FTNmdBd0lCQWdJQkFUQUtCZ2dxaGtqT1BRUURBakFjTVJvd0dBWURWUVFERXhGcFpHVnVkR2wwCiAgZVM1c2FXNXJaWEprTGpBZUZ3MHlNakE0TXpFd09USXhOVFZhRncweU16QTRNekV3T1RJeU1UVmFNQnd4R2pBWQogIEJnTlZCQU1URVdsa1pXNTBhWFI1TG14cGJtdGxjbVF1TUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKICBRZ0FFa2NTMVIxZG1BY0pNcDNHTWljSTNiYlpMY24rTzd1aWJMSVdaRDVrZEIrSkJqZkZVei9IeGttVzlsaVdXCiAgWXRWL1p6VjRTcmpDckpjRXRlL2lqbXMrOEtOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwogIE1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKICBCQlNsY2JHYnd0MHoreGVqL2NNZVkvQVFzQ1pQZVRBS0JnZ3Foa2pPUFFRREFnTkpBREJHQWlFQTNaeFByVjFYCiAgQWNidlhFQy9wajV5L1RmU3l2TkFDcEM2Sk1DSmxDekRvQklDSVFDWnZ5cVhCaElONHl6bEtnQ1ZSMC9adHh1ZgogIGdGa2VpNlNkYW85WW5ERVJVdz09CiAgLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-config-overrides
  namespace: linkerd
